// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	dto "discusiin/dto"

	mock "github.com/stretchr/testify/mock"
)

// IDashboardServices is an autogenerated mock type for the IDashboardServices type
type IDashboardServices struct {
	mock.Mock
}

// GetTotalCountOfUserAndTopicAndPost provides a mock function with given fields: token
func (_m *IDashboardServices) GetTotalCountOfUserAndTopicAndPost(token dto.Token) (int, int, int, error) {
	ret := _m.Called(token)

	var r0 int
	if rf, ok := ret.Get(0).(func(dto.Token) int); ok {
		r0 = rf(token)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 int
	if rf, ok := ret.Get(1).(func(dto.Token) int); ok {
		r1 = rf(token)
	} else {
		r1 = ret.Get(1).(int)
	}

	var r2 int
	if rf, ok := ret.Get(2).(func(dto.Token) int); ok {
		r2 = rf(token)
	} else {
		r2 = ret.Get(2).(int)
	}

	var r3 error
	if rf, ok := ret.Get(3).(func(dto.Token) error); ok {
		r3 = rf(token)
	} else {
		r3 = ret.Error(3)
	}

	return r0, r1, r2, r3
}

type mockConstructorTestingTNewIDashboardServices interface {
	mock.TestingT
	Cleanup(func())
}

// NewIDashboardServices creates a new instance of IDashboardServices. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIDashboardServices(t mockConstructorTestingTNewIDashboardServices) *IDashboardServices {
	mock := &IDashboardServices{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
