// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	dto "discusiin/dto"

	mock "github.com/stretchr/testify/mock"
)

// ILikeServices is an autogenerated mock type for the ILikeServices type
type ILikeServices struct {
	mock.Mock
}

// DislikePost provides a mock function with given fields: token, postId
func (_m *ILikeServices) DislikePost(token dto.Token, postId int) error {
	ret := _m.Called(token, postId)

	var r0 error
	if rf, ok := ret.Get(0).(func(dto.Token, int) error); ok {
		r0 = rf(token, postId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// LikePost provides a mock function with given fields: token, postId
func (_m *ILikeServices) LikePost(token dto.Token, postId int) error {
	ret := _m.Called(token, postId)

	var r0 error
	if rf, ok := ret.Get(0).(func(dto.Token, int) error); ok {
		r0 = rf(token, postId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewILikeServices interface {
	mock.TestingT
	Cleanup(func())
}

// NewILikeServices creates a new instance of ILikeServices. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewILikeServices(t mockConstructorTestingTNewILikeServices) *ILikeServices {
	mock := &ILikeServices{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
